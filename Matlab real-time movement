function pos_real(num)
close all;
clc;

%Apertura del puerto
%a = arduino('COM3','Uno');
delete(instrfind({'Port'},{'COM4'}));
puerto = serial('COM4');
puerto.BaudRate = 230400;
warning('off','MATLAB:serial:fscanf:unsuccesfulRead');

fopen(puerto);
puerto.Parity = 'none';

%Inicializa el contador de mensajes.

c = 0;
%d1 = 0;
%d2 = 0;
figure('Name','Gráfico de movimiento del receptor')
title('Gráfico de movimiento del receptor')
xlabel('x')
ylabel('y')

grid on
hold on

%Es posible insertar los puntos inicial y final de recta en coordenadas 
%(UTM) para que calcule de forma instantánea la distancia del receptor 
%a la recta.

Q1 = [289851,4721108.5];
Q2 = [289859,4721106];
%R1 = [289915.83,4721098.14];
%R2 = [289914.13,4721093.14];

Qx = [Q1(1),Q2(1)];
Qy = [Q1(2),Q2(2)];
%Rx = [R1(1),R2(1)];
%Ry = [R1(2),R2(2)];

%Inicializa el gráfico dinámico en función del número de sentencias que se
%requieran. 1 min -> 3500 sentencias (aprox)

while c <= num
    nmea = fscanf(puerto);
    if strfind(nmea,'GGA') == 4
        
        if nmea(49) == '4'
            long = -((str2double(nmea(35)))+(str2double(nmea(36:45))/60));  
            lat = (str2double(nmea(18:19)))+(str2double(nmea(20:29))/60);
            [x,y,utmzone] = deg2utm(lat,long);
            P = [x,y];
            d1 = (det([Q2-Q1;P-Q1]))/norm(Q2-Q1);
            %d2 = abs(det([R2-R1;P-R1]))/norm(R2-R1);
            xlim([x-5 x+5]);
            ylim([y-5 y+5]);
            %legend(num2str(d1),'Location','south');
            plot(Qx,Qy,'r')
            %plot(Rx,Ry,'b')
            plot(x,y,'ro')
            drawnow
%             if d1 > 0.1
%                izquierda;
%             elseif d1 < -0.1
%                derecha;
%             else
%                adelante;
%             end
%         else
%            parar;            
        end
    end
    c = c + 1;
end
% function adelante()
%     writeDigitalPin(a,'D9',1);
%     writeDigitalPin(a,'D8',0);
%     writePWMDutyCycle(a,'D10',1);
%     writeDigitalPin(a,'D7',1);
%     writeDigitalPin(a,'D6',0);
%     writePWMDutyCycle(a,'D5',1);
% end
% 
% function parar()
%     writeDigitalPin(a,'D9',0);
%     writeDigitalPin(a,'D8',0);
%     writePWMDutyCycle(a,'D10',0);
%     writeDigitalPin(a,'D7',0);
%     writeDigitalPin(a,'D6',0);
%     writePWMDutyCycle(a,'D5',0);
% end
% 
% function derecha()
%     writeDigitalPin(a,'D9',1);
%     writeDigitalPin(a,'D8',0);
%     writePWMDutyCycle(a,'D10',1);
%     writeDigitalPin(a,'D7',1);
%     writeDigitalPin(a,'D6',0);
%     writePWMDutyCycle(a,'D5',0.25);
% end
% 
% function izquierda()
%     writeDigitalPin(a,'D9',1);
%     writeDigitalPin(a,'D8',0);
%     writePWMDutyCycle(a,'D10',0.25);
%     writeDigitalPin(a,'D7',1);
%     writeDigitalPin(a,'D6',0);
%     writePWMDutyCycle(a,'D5',1);  
% end

%Cierra la conexión con el puerto

fclose(puerto);
delete(puerto);
clear all;

end
